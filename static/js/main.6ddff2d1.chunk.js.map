{"version":3,"sources":["serviceWorker.ts","MaterialUI/index.ts","Components/ImageCell/styles.ts","Components/ImageCell/index.tsx","Components/MainUI/styles.ts","Utils/constants.ts","Components/Clocks/styles.ts","Components/Clocks/Clock/styles.ts","Components/Clocks/Clock/index.tsx","Components/Clocks/index.tsx","Components/Sentry/styles.ts","Components/Sentry/index.tsx","Components/ProgramsMap/styles.ts","Components/ProgramsMap/index.tsx","Components/NeoCount/styles.ts","Components/TitledCell/styles.ts","Components/TitledCell/index.tsx","Components/NeoCount/index.tsx","Components/MainUI/index.tsx","Components/PageHome/styles.ts","Components/PageHome/index.tsx","Components/PageAbout/index.tsx","AppEntry/styles.ts","Components/SimpleMenu/index.tsx","Components/Layout/styles.ts","Components/Layout/index.tsx","index.tsx","AppEntry/index.tsx"],"names":["Boolean","window","location","hostname","match","darklyTheme","createMuiTheme","palette","type","background","default","primary","main","secondary","error","theme","useStyles","makeStyles","container","width","height","backgroundColor","image","backgroundSize","backgroundPosition","backgroundRepeat","ImageCell","props","classes","className","style","backgroundImage","imageUrl","display","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","gridGap","textAlign","text","border","boxSizing","justifyContent","alignItems","borderRadius","imageLeft","gridArea","imageRight","title","fontSize","fontWeight","clocks","neoCount","sentry","programs","recentTab","futureTab","name","padding","flex","clock1","clock2","clock3","clock4","clock5","clock6","clock7","position","flexDirection","zIndex","color","transform","opacity","textShadow","flagImage","top","left","right","bottom","Clock","time","flagUrl","Clocks","triangleSvg","score","marginTop","triColors","Sentry","useState","setScore","triColorIndex","setTricolorIndex","useEffect","interval","setInterval","newScore","Math","round","random","clearInterval","viewBox","onClick","prev","length","d","fill","stroke","strokeWidth","example","imagePlaceholder","ProgramsMap","month","year","count","gridColumn","gridRow","content","TitledCell","alignment","paddingRight","icon","children","NeoCount","faCalendarWeek","faCalendar","MainUI","faMeteor","faShieldAlt","faGlobeAmericas","faTable","PageHome","PageAbout","margin","SimpleMenu","to","Layout","ReactDOM","render","ThemeProvider","CssBaseline","basename","process","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6ddff2d1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { borderColor } from '../Utils/constants';\n\nexport const defaultDark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: { default: 'black' }\n  }\n});\n\nexport const defaultLight = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n});\n\n// Themes derived from https://bootswatch.com/\nexport const darklyTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#375a7f' },\n    secondary: { main: '#444' },\n    error: { main: '#E74C3C' },\n    background: { default: 'black' }\n    // background: { default: borderColor }\n    // background: { default: 'rgba(50,50,50)' }\n  }\n});\n\nexport const superheroTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#DF691A' },\n    secondary: { main: '#4E5D6C' },\n    error: { main: '#d9534f' },\n    background: { default: '#2B3E50' }\n  }\n});\n\nexport const theme = darklyTheme;\n\nexport default theme;\n\n//\n// Palette Type:\n//\n// primary?: PaletteColorOptions;\n// secondary?: PaletteColorOptions;\n// error?: PaletteColorOptions;\n// type?: PaletteType;\n// tonalOffset?: number;\n// contrastThreshold?: number;\n// common?: Partial<CommonColors>;\n// grey?: ColorPartial;\n// text?: Partial<TypeText>;\n// divider?: string;\n// action?: Partial<TypeAction>;\n// background?: Partial<TypeBackground>;\n// getContrastText?: (background: string) => string;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'black'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    backgroundSize: 'contain',\n    // backgroundSize: 'auto 80%',\n    backgroundPosition: 'center center',\n    backgroundRepeat: 'no-repeat'\n  }\n}));\n","import React from 'react';\nimport { useStyles } from './styles';\n\ninterface IProps {\n  imageUrl: string;\n}\n\nexport const ImageCell = (props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div\n        className={classes.image}\n        style={{\n          backgroundImage: `url(${props.imageUrl})`\n        }}\n      ></div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl, borderColor } from '../../Utils/constants';\n\n/**\n * Define Grid Row-Column Params for Main (non-Mobile) 'Desktop' View\n */\nconst gridGap = 20;\nconst gridTemplateRows = `minmax(0px,.5fr) minmax(0px,.5fr) minmax(0px,1.5fr) minmax(0px,3fr)`; // This pattern ensures the grid cells don't shrink/expand depending on content\nconst gridTemplateColumns = `repeat(8,minmax(0px,1fr))`;\nconst gridTemplateAreas = `\n  'imageLeft title     title     title     title     title    title      imageRight'\n  'imageLeft clocks    clocks    clocks    clocks    clocks   clocks     imageRight'\n  'neoCount  neoCount  neoCount  neoCount  sentry    sentry   programs   programs'\n  'recentTab recentTab recentTab recentTab futureTab futureTab futureTab futureTab'\n`;\n\n/**\n * Define Grid Row-Column Params for Mobile View\n */\nconst gridGapMobile = 10;\nconst gridTemplateRowsMobile = `\n  minmax(0px,100px)\n  minmax(0px,200px)\n  minmax(0px,150px)\n  minmax(0px,1fr)\n  minmax(0px,1fr)\n  minmax(0px,1fr)\n`;\nconst gridTemplateColumnsMobile = `\n  minmax(0px,1fr) minmax(0px,2fr) minmax(0px,2fr) minmax(0px,1fr)`;\nconst gridTemplateAreasMobile = `\n  'imageLeft title     title     imageRight'\n  'clocks    clocks    clocks    clocks '\n  'sentry    sentry    programs  programs '\n  'neoCount  neoCount  neoCount  neoCount'\n  'recentTab recentTab recentTab recentTab'\n  'futureTab futureTab futureTab  futureTab'\n`;\n\n/**\n * Now apply these grid settings to the actual styles generator\n */\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100vw',\n      height: '95vh',\n      display: 'grid',\n      gridTemplateRows,\n      gridTemplateColumns,\n      gridTemplateAreas,\n      gridGap,\n      textAlign: 'center',\n      text: 'center',\n      border: `${gridGap}px solid ${true ? 'transparent' : borderColor}`,\n      '& > div': {\n        // backgroundColor: 'transparent',\n        // backgroundColor: 'rgba(50,50,50,1)',\n        // backgroundColor: 'black',\n        backgroundColor: '#181b2e',\n        // border: `3px solid ${borderColor}`,\n        boxSizing: 'border-box',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 1\n      }\n    },\n    imageLeft: {\n      gridArea: 'imageLeft',\n      backgroundColor: 'pink'\n    },\n    imageRight: {\n      gridArea: 'imageRight',\n      backgroundColor: 'red'\n    },\n    title: {\n      gridArea: 'title',\n      backgroundColor: 'blue',\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    clocks: {\n      gridArea: 'clocks',\n      backgroundColor: 'green'\n    },\n    neoCount: {\n      gridArea: 'neoCount',\n      backgroundColor: 'cyan'\n    },\n    sentry: {\n      gridArea: 'sentry',\n      backgroundColor: 'purple'\n    },\n    programs: {\n      gridArea: 'programs',\n      backgroundColor: 'purple'\n    },\n    recentTab: {\n      gridArea: 'recentTab',\n      backgroundColor: 'brown'\n    },\n    futureTab: {\n      gridArea: 'futureTab',\n      backgroundColor: 'yellow'\n    },\n\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        height: 'auto', // Let height grow with content\n        gridGap: gridGapMobile,\n        gridTemplateRows: gridTemplateRowsMobile,\n        gridTemplateColumns: gridTemplateColumnsMobile,\n        gridTemplateAreas: gridTemplateAreasMobile\n      }\n    }\n  }),\n  { name: 'main-ui' }\n);\n","export const mobileWidthPxl = 600;\n\nexport const borderColor = 'rgba(100,100,100,0.3)';\n// export const borderColor = 'rgba(0,0,0,1)';\n// export const borderColor = 'transparent';\n","import { makeStyles } from '@material-ui/core';\n\nimport { mobileWidthPxl } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      padding: 0,\n      flex: 1,\n      display: 'grid',\n      gridGap: 5,\n      gridTemplateRows: `repeat(1,minmax(0px,1fr))`,\n      gridTemplateColumns: `repeat(7,minmax(0px,1fr))`,\n      gridTemplateAreas: `'clock1 clock2 clock3 clock4 clock5 clock6 clock7'`,\n      '& > div': {\n        // border: 'solid 1px red',\n        display: 'flex',\n        // backgroundColor: 'rgba(0,255,0,0.3)',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    },\n    clock1: {\n      gridArea: 'clock1'\n      // backgroundColor: 'green'\n    },\n    clock2: {\n      gridArea: 'clock2'\n      // backgroundColor: 'green'\n    },\n    clock3: {\n      gridArea: 'clock3'\n      // backgroundColor: 'green'\n    },\n    clock4: {\n      gridArea: 'clock4'\n      // backgroundColor: 'green'\n    },\n    clock5: {\n      gridArea: 'clock5'\n      // backgroundColor: 'green'\n    },\n    clock6: {\n      gridArea: 'clock6'\n      // backgroundColor: 'green'\n    },\n    clock7: {\n      gridArea: 'clock7'\n      // backgroundColor: 'green'\n    },\n\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        gridTemplateRows: `minmax(0px,1fr) repeat(2,minmax(0px,1fr))`,\n        gridTemplateColumns: `minmax(0px,1fr) minmax(0px,1fr) minmax(0px,1fr)`,\n        gridTemplateAreas: `\n          'clock5 clock5 clock5'\n          'clock1 clock2 clock3'\n          'clock4 clock6 clock7'\n        `\n      }\n    }\n  }),\n  { name: 'clocks' }\n);\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl, borderColor } from '../../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      // border: `solid 1px ${borderColor}`,\n      '& > div.xxx': {\n        flex: 1,\n        display: 'flex',\n        // backgroundColor: 'rgba(0,255,0,0.3)',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 2,\n        color: 'white',\n        fontSize: 14,\n        fontWeight: 'bold'\n      },\n      '&:hover': {\n        color: 'green',\n        transform: 'scale(2) translate(0%, 0%)',\n        zIndex: 5,\n        '& div.yyy': {\n          opacity: 0.9,\n          zIndex: 6\n        },\n        '& div.xxx ': {\n          textShadow: '1px 1px 1px rgba(0,0,0,1)',\n          zIndex: 7\n        }\n      }\n    },\n    flagImage: {\n      padding: 5,\n      boxSizing: 'border-box',\n      // backgroundColor: 'red',\n      backgroundPosition: 'center center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '100% 100%',\n      // backgroundSize: 'auto 100%',\n      // backgroundSize: 'contain',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0.2,\n      zIndex: 1\n    },\n    //\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        flexDirection: 'row'\n      }\n    }\n  }),\n  { name: 'clock' }\n);\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\ninterface IProps {\n  location: string;\n  time: string;\n  flagUrl: string;\n}\n\nexport const Clock = (props: IProps) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        <div className=\"xxx\">{props.location}</div>\n        <div className=\"xxx\">{props.time}</div>\n        <div\n          className={classes.flagImage + ' yyy'}\n          style={{ backgroundImage: `url(${props.flagUrl})` }}\n        />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useStyles } from './styles';\n\nimport { Clock } from './Clock';\n\nexport const Clocks = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.clock1}>\n        <Clock location=\"Hawaii\" time=\"12:00\" flagUrl=\"images/hawaii-flag.png\" />\n      </div>\n      <div className={classes.clock2}>\n        <Clock location=\"Arizona\" time=\"12:00\" flagUrl=\"images/arizona-flag.png\" />\n      </div>\n      <div className={classes.clock3}>\n        <Clock location=\"DC\" time=\"12:00\" flagUrl=\"images/dc-flag.svg\" />\n      </div>\n      <div className={classes.clock4}>\n        <Clock location=\"Santiago\" time=\"12:00\" flagUrl=\"images/chile-flag.png\" />\n      </div>\n      <div className={classes.clock5}>\n        <Clock location=\"UTC\" time=\"12:00\" flagUrl=\"images/utc-flag.png\" />\n      </div>\n      <div className={classes.clock6}>\n        <Clock location=\"RSA\" time=\"12:00\" flagUrl=\"images/rsa-flag.png\" />\n      </div>\n      <div className={classes.clock7}>\n        <Clock location=\"Perth\" time=\"12:00\" flagUrl=\"images/aus-flag.png\" />\n      </div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\n//\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative'\n  },\n  triangleSvg: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  score: {\n    marginTop: 30,\n    color: 'black',\n    fontSize: 30,\n    flex: 1,\n    zIndex: 10\n  },\n  title: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 10,\n    left: 0,\n    right: 0,\n    height: '33%'\n  }\n}));\n","import React, { useState, useEffect } from 'react';\n\nimport { useStyles } from './styles';\n\nconst triColors = ['green', 'orange', 'red'];\nconst triStrokePxl = 10;\nconst svgBorder = 20;\n\nexport const Sentry = () => {\n  const classes = useStyles();\n  const [score, setScore] = useState<number>(0);\n  const [triColorIndex, setTricolorIndex] = useState<number>(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const newScore = Math.round(Math.random() * 100);\n      setScore(newScore);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (score < 33) setTricolorIndex(0);\n    else if (score < 66) setTricolorIndex(1);\n    else if (score < 100) setTricolorIndex(2);\n  }, [score]);\n\n  return (\n    <div className={classes.container}>\n      <svg\n        className={classes.triangleSvg}\n        height=\"100\"\n        width=\"100px\"\n        viewBox={`${-svgBorder} ${-svgBorder} ${100 + 2 * svgBorder} ${100 + 2 * svgBorder}`}\n        onClick={() => setTricolorIndex((prev) => (prev + 1) % triColors.length)}\n      >\n        <g>\n          <path\n            d=\"M 50,0 L 0,100 L 100,100 Z\"\n            fill=\"white\"\n            stroke={triColors[triColorIndex]}\n            strokeWidth={triStrokePxl}\n          />\n        </g>\n      </svg>\n      <div className={classes.score}>{score}</div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\n//\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%'\n  },\n  example: {\n    color: 'red'\n  },\n  imagePlaceholder: {\n    // opacity: 0.5,\n    width: '100%',\n    height: '100%',\n    backgroundImage: 'url(images/world-placeholder.png)',\n    // backgroundSize: 'cover',\n    backgroundSize: '100% 100%',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center center'\n  }\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\nexport const ProgramsMap = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        {/* <iframe\n          title=\"xxx\"\n          src=\"https://www.google.com/maps/d/embed?mid=19R2POoOKW1RQj4-bBd5GA7dLvw8\"\n          width=\"100%\"\n          height=\"100%\"\n        ></iframe> */}\n        <div className={classes.imagePlaceholder}></div>\n      </div>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl, borderColor } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      display: 'flex'\n    },\n    month: {\n      flex: 1\n      // backgroundColor: 'rgba(255,255,255,0.05)'\n    },\n    year: {\n      flex: 1\n      // backgroundColor: 'rgba(255,255,255,0.05)'\n    },\n\n    count: {\n      width: '100%',\n      height: '100%',\n      fontSize: 60,\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        //\n      }\n    }\n  }),\n  { name: 'neo-count' }\n);\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl } from '../../Utils/constants';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'grid',\n    gridTemplateRows: '1fr 3fr',\n    gridTemplateColumns: 'repeat(1, minmax(0px,1fr))'\n  },\n  title: {\n    // backgroundColor: 'rgba(255,255,255,0.1)',\n    gridColumn: '1 / 2',\n    gridRow: '1 / 2',\n    display: 'flex',\n    justifyContent: 'left',\n    padding: '0px 10px',\n    alignItems: 'center',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  content: {\n    backgroundColor: 'rgba(255,255,255,0)',\n    gridColumn: '1 / 2',\n    gridRow: '2 / 3'\n  },\n  [`@media (max-width: ${mobileWidthPxl}px)`]: {\n    title: {\n      fontSize: 14\n    }\n  }\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\ninterface IProps {\n  title: string;\n  icon?: () => JSX.Element;\n  alignment?: 'left' | 'center';\n}\n\nexport const TitledCell = (props: React.PropsWithChildren<IProps>) => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        <div\n          className={classes.title}\n          style={{\n            justifyContent: props.alignment\n          }}\n        >\n          <span style={{ paddingRight: 5 }}>{props.icon ? <props.icon /> : null} </span>\n          {props.title}\n        </div>\n        <div className={classes.content}>{props.children}</div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar, faCalendarWeek } from '@fortawesome/free-solid-svg-icons';\n\nimport { useStyles } from './styles';\nimport { TitledCell } from '../TitledCell';\n\nexport const NeoCount = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        <div className={classes.month}>\n          <TitledCell\n            title=\"LAST 30 DAYS\"\n            icon={() => <FontAwesomeIcon icon={faCalendarWeek} />}\n            alignment=\"center\"\n          >\n            <div className={classes.count}>10</div>\n          </TitledCell>\n        </div>\n        <div className={classes.year}>\n          <TitledCell\n            title=\"LAST 365 DAYS\"\n            icon={() => <FontAwesomeIcon icon={faCalendar} />}\n            alignment=\"center\"\n          >\n            <div className={classes.count}>999</div>\n          </TitledCell>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMeteor, faShieldAlt, faTable, faGlobeAmericas } from '@fortawesome/free-solid-svg-icons';\n\nimport { ImageCell } from '../ImageCell';\nimport { useStyles } from './styles';\nimport { Clocks } from '../Clocks';\nimport { Sentry } from '../Sentry';\nimport { ProgramsMap } from '../ProgramsMap';\nimport { NeoCount } from '../NeoCount';\nimport { TitledCell } from '../TitledCell';\n\nexport const MainUI = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.imageLeft}>\n        <ImageCell imageUrl=\"images/pdco-logo.jpg\" />\n      </div>\n      <div className={classes.imageRight}>\n        <ImageCell imageUrl=\"images/nasa-logo.png\" />\n      </div>\n      <div className={classes.title}> Planetary Defense Coordination Office </div>\n      <div className={classes.clocks}>\n        <Clocks />\n      </div>\n      <div className={classes.neoCount}>\n        <TitledCell title=\"CLOSE APPROACHES\" icon={() => <FontAwesomeIcon icon={faMeteor} />}>\n          <NeoCount />\n        </TitledCell>\n      </div>\n      <div className={classes.sentry}>\n        <TitledCell title=\"SENTRY STATUS\" icon={() => <FontAwesomeIcon icon={faShieldAlt} />}>\n          <Sentry />\n        </TitledCell>\n      </div>\n      <div className={classes.programs}>\n        <TitledCell title=\"PROGRAMS\" icon={() => <FontAwesomeIcon icon={faGlobeAmericas} />}>\n          <ProgramsMap />\n        </TitledCell>\n      </div>\n      <div className={classes.recentTab}>\n        <TitledCell title=\"RECENT TABLE\" icon={() => <FontAwesomeIcon icon={faTable} />}>\n          ...\n        </TitledCell>\n      </div>\n      <div className={classes.futureTab}>\n        <TitledCell title=\"FUTURE TABLE\" icon={() => <FontAwesomeIcon icon={faTable} />}>\n          ...\n        </TitledCell>\n      </div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    }\n  }),\n  { name: 'page-home' }\n);\n","import React from 'react';\n\nimport { MainUI } from '../MainUI';\nimport { useStyles } from './styles';\n\nexport const PageHome = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <MainUI />\n    </>\n  );\n};\n","import React from 'react';\n\nexport const PageAbout = () => {\n  return (\n    <>\n      <h1>About Page</h1>\n      <p>This is my about page!</p>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    //\n    container: {\n      //\n    }\n  }),\n  { name: 'app-entry' }\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    container: {\n      '& ul': {\n        margin: 0,\n        '& li': {\n          color: 'white',\n          display: 'inline-block',\n          margin: '0px 10px'\n        }\n      }\n    }\n  };\n});\n\n/**\n * This is a simple menu to demo how to work a react router\n */\nexport const SimpleMenu = () => {\n  const classes = useStyles();\n  return (\n    <div className={'simple-menu-container ' + classes['container']}>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    return {\n      container: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.default\n      }\n    };\n  },\n  { name: 'layout' }\n);\n","import React from 'react';\nimport { useStyles } from './styles';\n\nexport const Layout = (props: React.PropsWithChildren<any>) => {\n  const classes = useStyles();\n  return <div className={'layout-container ' + classes.container}>{props.children}</div>;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Style setup\nimport './index.scss';\nimport 'typeface-roboto';\n\n// App Setup\nimport * as serviceWorker from './serviceWorker';\nimport { AppEntry } from './AppEntry';\nReactDOM.render(<AppEntry />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport theme from '../MaterialUI';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\n\nimport { PageHome } from '../Components/PageHome';\nimport { PageAbout } from '../Components/PageAbout';\nimport { useStyles } from './styles';\nimport { SimpleMenu } from '../Components/SimpleMenu';\nimport { Layout } from '../Components/Layout';\n\nexport const AppEntry = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Layout>\n          <Router basename={process.env.REACT_APP_BASE_HREF || '/'}>\n            <Switch>\n              <Route exact path=\"/\">\n                <PageHome />\n              </Route>\n              <Route path=\"/about\">\n                <PageAbout />\n              </Route>\n            </Switch>\n            <SimpleMenu />\n          </Router>\n        </Layout>\n      </ThemeProvider>\n    </div>\n  );\n};\n"],"sourceRoot":""}