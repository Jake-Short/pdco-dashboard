{"version":3,"sources":["serviceWorker.ts","MaterialUI/index.ts","Components/ImageCell/styles.ts","Components/ImageCell/index.tsx","Utils/constants.ts","Components/MainUI/styles.ts","Components/Clocks/styles.ts","Components/Clocks/Clock/styles.ts","Components/Clocks/Clock/index.tsx","Components/Clocks/index.tsx","Components/Sentry/styles.ts","Components/Sentry/index.tsx","Components/ProgramsMap/styles.ts","Components/ProgramsMap/index.tsx","Components/NeoCount/styles.ts","Components/TitledCell/styles.ts","Components/TitledCell/index.tsx","Utils/apiDateStringToJsDate.ts","Components/NeoCount/index.tsx","Components/TableCAD/styles.ts","Components/TableCAD/index.tsx","Utils/formattedTime.ts","Utils/fetchAllData.ts","Components/MainUI/index.tsx","Hooks/useLocalStorage.ts","Components/PageHome/styles.ts","Components/PageHome/index.tsx","Components/PageAbout/styles.ts","Components/PageAbout/index.tsx","AppEntry/styles.ts","Components/SimpleMenu/index.tsx","Components/Layout/styles.ts","Components/Layout/index.tsx","index.tsx","AppEntry/index.tsx"],"names":["Boolean","window","location","hostname","match","darklyTheme","createMuiTheme","palette","type","background","default","primary","main","secondary","error","theme","useStyles","makeStyles","container","width","height","backgroundColor","image","backgroundSize","backgroundPosition","backgroundRepeat","ImageCell","props","classes","className","style","backgroundImage","imageUrl","MONTHS","cadFieldIndices","display","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","gridGap","textAlign","text","border","boxSizing","justifyContent","alignItems","borderRadius","imageLeft","gridArea","imageRight","title","fontSize","fontWeight","position","flexDirection","paddingBottom","date","clocks","neoCount","sentry","programs","recentTab","futureTab","name","padding","flex","clock1","clock2","clock3","clock4","clock5","clock6","clock7","zIndex","color","transform","opacity","textShadow","flagImage","top","left","right","bottom","Clock","useState","moment","tz","timezone","m","setM","useEffect","interval","setInterval","add","clone","clearInterval","format","flagUrl","Clocks","triangleSvg","score","marginTop","Sentry","sentryData","setScore","triColor","setTriColor","tsMaxValues","data","filter","datum","ind","ts_max","map","parseInt","highestTsMaxValues","Math","max","apply","viewBox","d","fill","stroke","strokeWidth","example","imagePlaceholder","ProgramsMap","week","month","year","count","textDecoration","content","TitledCell","RenderedTitle","alignment","paddingRight","icon","isDisplayed","children","CircularProgress","apiDateStringToJsDate","dateStr","adjustedDateStr","replace","Date","NeoCount","cadData","caWeek","setCaWeek","caMonth","setCaMonth","caYear","setCaYear","filterDates","daysThreshold","datumArr","dateFromDate","dDays","console","log","length","outerWidth","faCalendarDay","faCalendarWeek","faCalendar","root","tableContainer","maxHeight","StyledTableCell","withStyles","head","common","white","body","TableCell","columns","id","label","minWidth","align","value","formatDist","parseFloat","toFixed","TableCAD","period","React","page","setPage","rowsPerPage","setRowsPerPage","rows","dateFromData","fullname","des","orbit_id","jd","cd","dist","dist_min","dist_max","v_rel","v_inf","t_sigma_f","h","TableContainer","Table","stickyHeader","size","aria-label","TableHead","TableRow","column","key","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","target","distAU","a","cad1LDUrl","getCadUrl","cad0p05AUUrl","Promise","all","fetch","then","res","json","cadData1LD","cadData0p05AU","timestamp","toUTCString","futureDateStr","setUTCSeconds","getUTCSeconds","futureDaysFromNow","toISOString","split","MainUI","initialValue","item","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","storedData","setStoredData","displayDate","setDisplayDate","getMonth","getDate","getFullYear","time","toTimeString","formattedTimestamp","fetchAllData","onClick","flip","faRedo","faMeteor","href","faShieldAlt","faGlobeAmericas","faTable","PageHome","minHeight","overflow","PageAbout","margin","SimpleMenu","to","Layout","ReactDOM","render","ThemeProvider","CssBaseline","basename","process","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0ac6795b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { borderColor } from '../Utils/constants';\n\nexport const defaultDark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: { default: 'black' }\n  }\n});\n\nexport const defaultLight = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n});\n\n// Themes derived from https://bootswatch.com/\nexport const darklyTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#375a7f' },\n    secondary: { main: '#444' },\n    error: { main: '#E74C3C' },\n    background: { default: 'black' }\n    // background: { default: borderColor }\n    // background: { default: 'rgba(50,50,50)' }\n  }\n});\n\nexport const superheroTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: { main: '#DF691A' },\n    secondary: { main: '#4E5D6C' },\n    error: { main: '#d9534f' },\n    background: { default: '#2B3E50' }\n  }\n});\n\nexport const theme = darklyTheme;\n\nexport default theme;\n\n//\n// Palette Type:\n//\n// primary?: PaletteColorOptions;\n// secondary?: PaletteColorOptions;\n// error?: PaletteColorOptions;\n// type?: PaletteType;\n// tonalOffset?: number;\n// contrastThreshold?: number;\n// common?: Partial<CommonColors>;\n// grey?: ColorPartial;\n// text?: Partial<TypeText>;\n// divider?: string;\n// action?: Partial<TypeAction>;\n// background?: Partial<TypeBackground>;\n// getContrastText?: (background: string) => string;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'black'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    backgroundSize: 'contain',\n    // backgroundSize: 'auto 80%',\n    backgroundPosition: 'center center',\n    backgroundRepeat: 'no-repeat'\n  }\n}));\n","import React from 'react';\nimport { useStyles } from './styles';\n\ninterface IProps {\n  imageUrl: string;\n}\n\nexport const ImageCell = (props: IProps) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div\n        className={classes.image}\n        style={{\n          backgroundImage: `url(${props.imageUrl})`\n        }}\n      ></div>\n    </div>\n  );\n};\n","// export const mobileWidthPxl = 600;\nexport const mobileWidthPxl = 730;\n\nexport const borderColor = 'rgba(100,100,100,0.3)';\n// export const borderColor = 'rgba(0,0,0,1)';\n// export const borderColor = 'transparent';\n\nexport const MONTHS = [\n  'JAN',\n  'FEB',\n  'MAR',\n  'APR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AUG',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DEC'\n];\n\n// Helps in referencing data from array returned by API:\n// https://ssd-api.jpl.nasa.gov/doc/cad.html\nexport const cadFieldIndices = {\n  des: 0,\n  orbit_id: 1,\n  jd: 2,\n  cd: 3,\n  dist: 4,\n  dist_min: 5,\n  dist_max: 6,\n  v_rel: 7,\n  v_inf: 8,\n  t_sigma_f: 9,\n  h: 10,\n  fullname: 11\n};\n\n// Convert distances in AU to LD\nexport const au2ld = 389.17037554435;\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl, borderColor } from '../../Utils/constants';\n\n/**\n * Define Grid Row-Column Params for Main (non-Mobile) 'Desktop' View\n */\nconst gridGap = 20;\nconst gridTemplateRows = `minmax(0px,.5fr) minmax(0px,.5fr) minmax(0px,1.5fr) minmax(0px,3fr)`; // This pattern ensures the grid cells don't shrink/expand depending on content\nconst gridTemplateColumns = `repeat(8,minmax(0px,1fr))`;\nconst gridTemplateAreas = `\n  'imageLeft title     title     title     title     title    title      imageRight'\n  'imageLeft clocks    clocks    clocks    clocks    clocks   clocks     imageRight'\n  'neoCount  neoCount  neoCount  neoCount  sentry    sentry   programs   programs'\n  'recentTab recentTab recentTab recentTab futureTab futureTab futureTab futureTab'\n`;\n\n/**\n * Define Grid Row-Column Params for Mobile View\n */\nconst gridGapMobile = 10;\nconst gridTemplateRowsMobile = `\n  minmax(0px,50px)\n  minmax(0px,200px)\n  minmax(0px,150px)\n  minmax(0px,150px)\n  minmax(0px,350px)\n  minmax(0px,350px)\n`;\nconst gridTemplateColumnsMobile = `\n  minmax(0px,1fr) minmax(0px,2fr) minmax(0px,2fr) minmax(0px,1fr)`;\nconst gridTemplateAreasMobile = `\n  'imageLeft title     title     imageRight'\n  'clocks    clocks    clocks    clocks '\n  'sentry    sentry    programs  programs '\n  'neoCount  neoCount  neoCount  neoCount'\n  'recentTab recentTab recentTab recentTab'\n  'futureTab futureTab futureTab  futureTab'\n`;\n\n/**\n * Now apply these grid settings to the actual styles generator\n */\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100vw',\n      height: '95vh',\n      display: 'grid',\n      gridTemplateRows,\n      gridTemplateColumns,\n      gridTemplateAreas,\n      gridGap,\n      textAlign: 'center',\n      text: 'center',\n      border: `${gridGap}px solid ${true ? 'transparent' : borderColor}`,\n      '& > div': {\n        // backgroundColor: 'transparent',\n        // backgroundColor: 'rgba(50,50,50,1)',\n        // backgroundColor: 'black',\n        backgroundColor: '#181b2e',\n        // border: `3px solid ${borderColor}`,\n        boxSizing: 'border-box',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 1\n      }\n    },\n    imageLeft: {\n      gridArea: 'imageLeft',\n      backgroundColor: 'pink'\n    },\n    imageRight: {\n      gridArea: 'imageRight',\n      backgroundColor: 'red'\n    },\n    title: {\n      gridArea: 'title',\n      backgroundColor: 'blue',\n      fontSize: 20,\n      fontWeight: 'bold',\n      //\n      display: 'flex',\n      position: 'relative',\n      flexDirection: 'column',\n      '& > div': {\n        paddingBottom: 2\n      },\n      '& > .shortTitle': {\n        display: 'none',\n        paddingBottom: 2\n      },\n      '& > .date': {\n        fontSize: 12\n      }\n    },\n    date: {\n      gridArea: 'date',\n      backgroundColor: 'blue',\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    clocks: {\n      gridArea: 'clocks',\n      backgroundColor: 'green'\n    },\n    neoCount: {\n      gridArea: 'neoCount',\n      backgroundColor: 'cyan'\n    },\n    sentry: {\n      gridArea: 'sentry',\n      backgroundColor: 'purple'\n    },\n    programs: {\n      gridArea: 'programs',\n      backgroundColor: 'purple'\n    },\n    recentTab: {\n      gridArea: 'recentTab',\n      backgroundColor: 'brown'\n    },\n    futureTab: {\n      gridArea: 'futureTab',\n      backgroundColor: 'yellow'\n    },\n\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        height: 'auto', // Let height grow with content\n        gridGap: gridGapMobile,\n        gridTemplateRows: gridTemplateRowsMobile,\n        gridTemplateColumns: gridTemplateColumnsMobile,\n        gridTemplateAreas: gridTemplateAreasMobile\n      },\n      title: {\n        '& > .shortTitle': {\n          display: 'block'\n        },\n        '& > .longTitle': {\n          display: 'none'\n        }\n      }\n    }\n  }),\n  { name: 'main-ui' }\n);\n","import { makeStyles } from '@material-ui/core';\n\nimport { mobileWidthPxl } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      padding: 0,\n      flex: 1,\n      display: 'grid',\n      gridGap: 5,\n      gridTemplateRows: `repeat(1,minmax(0px,1fr))`,\n      gridTemplateColumns: `repeat(7,minmax(0px,1fr))`,\n      gridTemplateAreas: `'clock1 clock2 clock3 clock4 clock5 clock6 clock7'`,\n      '& > div': {\n        // border: 'solid 1px red',\n        display: 'flex',\n        // backgroundColor: 'rgba(0,255,0,0.3)',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    },\n    clock1: {\n      gridArea: 'clock1'\n      // backgroundColor: 'green'\n    },\n    clock2: {\n      gridArea: 'clock2'\n      // backgroundColor: 'green'\n    },\n    clock3: {\n      gridArea: 'clock3'\n      // backgroundColor: 'green'\n    },\n    clock4: {\n      gridArea: 'clock4'\n      // backgroundColor: 'green'\n    },\n    clock5: {\n      gridArea: 'clock5'\n      // backgroundColor: 'green'\n    },\n    clock6: {\n      gridArea: 'clock6'\n      // backgroundColor: 'green'\n    },\n    clock7: {\n      gridArea: 'clock7'\n      // backgroundColor: 'green'\n    },\n\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        gridTemplateRows: `minmax(0px,1fr) repeat(2,minmax(0px,1fr))`,\n        gridTemplateColumns: `minmax(0px,1fr) minmax(0px,1fr) minmax(0px,1fr)`,\n        gridTemplateAreas: `\n          'clock5 clock5 clock5'\n          'clock1 clock2 clock3'\n          'clock4 clock6 clock7'\n        `\n      }\n    }\n  }),\n  { name: 'clocks' }\n);\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl, borderColor } from '../../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      // border: `solid 1px ${borderColor}`,\n      '& > div.aux': {\n        flex: 1,\n        display: 'flex',\n        // backgroundColor: 'rgba(0,255,0,0.3)',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 2,\n        color: 'white',\n        fontSize: 14,\n        fontWeight: 'bold'\n      },\n      '&:hover': {\n        color: 'green',\n        transform: 'scale(2) translate(0%, 0%)',\n        zIndex: 5,\n        '& div.auy': {\n          opacity: 0.9,\n          zIndex: 6\n        },\n        '& div.aux ': {\n          textShadow: '1px 1px 1px rgba(0,0,0,1)',\n          zIndex: 7\n        }\n      }\n    },\n    flagImage: {\n      padding: 5,\n      boxSizing: 'border-box',\n      // backgroundColor: 'red',\n      backgroundPosition: 'center center',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '100% 100%',\n      // backgroundSize: 'auto 100%',\n      // backgroundSize: 'contain',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0.2,\n      zIndex: 1\n    },\n    //\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        // flexDirection: 'row'\n      }\n    }\n  }),\n  { name: 'clock' }\n);\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment-timezone';\n\nimport { useStyles } from './styles';\n\ninterface IProps {\n  location: string;\n  timezone: string;\n  flagUrl: string;\n}\n\nexport const Clock = (props: IProps) => {\n  const classes = useStyles();\n  const [m, setM] = useState(moment.tz(props.timezone));\n\n  useEffect(() => {\n    // Recompute every sec; could do less often to preserve resources\n    const interval = setInterval(() => setM(m.add(1, 'second').clone()), 1000);\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <>\n      <div className={classes.container}>\n        <div className=\"aux\">{props.location}</div>\n        <div className=\"aux\">{m.format('HH:mm')}</div>\n        <div\n          className={classes.flagImage + ' auy'}\n          style={{ backgroundImage: `url(${props.flagUrl})` }}\n        />\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useStyles } from './styles';\n\nimport { Clock } from './Clock';\n\nexport const Clocks = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.clock1}>\n        <Clock location=\"Hawaii\" timezone=\"Pacific/Honolulu\" flagUrl=\"images/hawaii-flag.png\" />\n      </div>\n      <div className={classes.clock2}>\n        <Clock location=\"Arizona\" timezone=\"America/Phoenix\" flagUrl=\"images/arizona-flag.png\" />\n      </div>\n      <div className={classes.clock3}>\n        <Clock location=\"DC\" timezone=\"America/New_York\" flagUrl=\"images/dc-flag.svg\" />\n      </div>\n      <div className={classes.clock4}>\n        <Clock location=\"Santiago\" timezone=\"America/Santiago\" flagUrl=\"images/chile-flag.png\" />\n      </div>\n      <div className={classes.clock5}>\n        <Clock location=\"UTC\" timezone=\"UTC\" flagUrl=\"images/utc-flag.png\" />\n      </div>\n      <div className={classes.clock6}>\n        <Clock location=\"RSA\" timezone=\"Africa/Johannesburg\" flagUrl=\"images/rsa-flag.png\" />\n      </div>\n      <div className={classes.clock7}>\n        <Clock location=\"Perth\" timezone=\"Australia/Perth\" flagUrl=\"images/aus-flag.png\" />\n      </div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\n//\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative'\n  },\n  triangleSvg: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  score: {\n    marginTop: 30,\n    color: 'black',\n    fontSize: 30,\n    flex: 1,\n    zIndex: 10\n  },\n  title: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 10,\n    left: 0,\n    right: 0,\n    height: '33%'\n  }\n}));\n","import React, { useState, useEffect } from 'react';\n\nimport { useStyles } from './styles';\nimport { ISentryData } from '../../Models/data';\n\nconst triStrokePxl = 10;\nconst svgBorder = 20;\n\ninterface IProps {\n  sentryData: ISentryData;\n}\n\nexport const Sentry = ({ sentryData }: IProps) => {\n  const classes = useStyles();\n  const [score, setScore] = useState<number>(0);\n  const [triColor, setTriColor] = useState<'grey' | 'green' | 'yellow' | 'orange' | 'red'>('grey');\n\n  useEffect(() => {\n    // Filter out those objects that contain ts_max values that aren't a string\n    // TODO: figure out a more robust test of the fitness of such objects\n    const tsMaxValues = sentryData.data\n      .filter((datum: any, ind: number) => {\n        return typeof datum.ts_max === 'string';\n      })\n      // Now map the filtered objects within the array of objects to an array of ts_max values (converted from strings to numbers)\n      .map((datum: any) => parseInt(datum.ts_max, 10));\n\n    // Now find the highest numeric value within the array\n    const highestTsMaxValues = Math.max.apply(null, tsMaxValues);\n\n    // Set our stateful variable to the highest-computed ts_max value\n    setScore(highestTsMaxValues);\n  }, [sentryData]);\n\n  useEffect(() => {\n    if (score === 0) setTriColor('grey');\n    if (score === 1) setTriColor('green');\n    if (score >= 2 && score <= 4) setTriColor('yellow');\n    if (score >= 5 && score <= 7) setTriColor('orange');\n    if (score >= 8) setTriColor('red');\n  }, [score]);\n\n  return (\n    <div className={classes.container}>\n      <svg\n        className={classes.triangleSvg}\n        height=\"100\"\n        width=\"100px\"\n        viewBox={`${-svgBorder} ${-svgBorder} ${100 + 2 * svgBorder} ${100 + 2 * svgBorder}`}\n      >\n        <g>\n          <path\n            d=\"M 50,0 L 0,100 L 100,100 Z\"\n            fill=\"white\"\n            stroke={triColor}\n            strokeWidth={triStrokePxl}\n          />\n        </g>\n      </svg>\n      <div className={classes.score}>{score}</div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\n//\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%'\n  },\n  example: {\n    color: 'red'\n  },\n  imagePlaceholder: {\n    // opacity: 0.5,\n    width: '100%',\n    height: '100%',\n    backgroundImage: 'url(images/world-placeholder.png)',\n    backgroundSize: 'cover',\n    // backgroundSize: '100% 100%',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center center'\n  }\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\nexport const ProgramsMap = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        {/* <iframe\n          title=\"xxx\"\n          src=\"https://www.google.com/maps/d/embed?mid=19R2POoOKW1RQj4-bBd5GA7dLvw8\"\n          width=\"100%\"\n          height=\"100%\"\n        ></iframe> */}\n        <div className={classes.imagePlaceholder}></div>\n      </div>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl, borderColor } from '../../Utils/constants';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%',\n      display: 'flex'\n    },\n    week: {\n      flex: 1\n      // backgroundColor: 'rgba(255,255,255,0.05)'\n    },\n    month: {\n      flex: 1\n      // backgroundColor: 'rgba(255,255,255,0.05)'\n    },\n    year: {\n      flex: 1\n      // backgroundColor: 'rgba(255,255,255,0.05)'\n    },\n\n    count: {\n      width: '100%',\n      height: '100%',\n      fontSize: 60,\n      fontWeight: 'bold',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    [`@media (max-width: ${mobileWidthPxl}px)`]: {\n      container: {\n        //\n      },\n      count: { fontSize: 40 }\n    }\n  }),\n  { name: 'neo-count' }\n);\n","import { makeStyles } from '@material-ui/core';\nimport { mobileWidthPxl } from '../../Utils/constants';\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    position: 'relative'\n  },\n  title: {\n    position: 'absolute',\n    top: 0,\n    height: 40,\n    left: 0,\n    right: 0,\n    // backgroundColor: 'rgba(255,255,255,0.1)',\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '0px 10px',\n    alignItems: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n    '& a': {\n      textDecoration: 'none',\n      color: 'white',\n      '&:hover': {\n        color: 'cyan'\n      }\n    }\n  },\n  content: {\n    position: 'absolute',\n    top: 40,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(255,255,255,0)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  [`@media (max-width: ${mobileWidthPxl}px)`]: {\n    title: {\n      fontSize: 14\n    }\n  }\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\nimport { CircularProgress } from '@material-ui/core';\n\ninterface IProps {\n  title: string | React.JSXElementConstructor<any>;\n  icon?: () => JSX.Element;\n  alignment?: 'left' | 'center';\n  isDisplayed?: boolean;\n}\n\nexport const TitledCell = (props: React.PropsWithChildren<IProps>) => {\n  const RenderedTitle =\n    typeof props.title === 'string' ? () => <>{props.title}</> : () => <props.title />;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        <div\n          className={classes.title}\n          style={{\n            justifyContent: props.alignment\n          }}\n        >\n          <span style={{ paddingRight: 5 }}>{props.icon ? <props.icon /> : null} </span>\n          <RenderedTitle />\n        </div>\n        <>\n          <div className={classes.content}>\n            {props.isDisplayed ? props.children : <CircularProgress />}\n          </div>\n        </>\n      </div>\n    </>\n  );\n};\n","/**\n * The nasa apis return times in the format '2020-Jun-05 08:23'\n * To convert this string into a js Date on all platforms (viz. iPhone)\n * we need to reformat the string before passing to the Date constructor\n */\nexport function apiDateStringToJsDate(dateStr: string) {\n  const adjustedDateStr = dateStr\n    .replace(' ', 'T')\n    .replace('Jan', '01')\n    .replace('Feb', '02')\n    .replace('Mar', '03')\n    .replace('Apr', '04')\n    .replace('May', '05')\n    .replace('Jun', '06')\n    .replace('Jul', '07')\n    .replace('Aug', '08')\n    .replace('Sep', '09')\n    .replace('Oct', '10')\n    .replace('Nov', '11')\n    .replace('Dec', '12');\n  return new Date(adjustedDateStr);\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar, faCalendarWeek, faCalendarDay } from '@fortawesome/free-solid-svg-icons';\n\nimport { useStyles } from './styles';\nimport { TitledCell } from '../TitledCell';\nimport { mobileWidthPxl, cadFieldIndices } from '../../Utils/constants';\nimport { apiDateStringToJsDate } from '../../Utils/apiDateStringToJsDate';\n\nimport { ICadData } from '../../Models/data';\n\ninterface IProps {\n  cadData: ICadData;\n}\n\nexport const NeoCount = ({ cadData }: IProps) => {\n  const [caWeek, setCaWeek] = useState(0);\n  const [caMonth, setCaMonth] = useState(0);\n  const [caYear, setCaYear] = useState(0);\n\n  useEffect(() => {\n    // Function to filter cad events within daysThreshold\n    const filterDates = (daysThreshold: number) => (datumArr: string[]) => {\n      const dateFromDate = apiDateStringToJsDate(datumArr[cadFieldIndices.cd]);\n      const dDays = (+new Date() - +dateFromDate) / (24 * 60 * 60 * 1000); // dMillSecs => Days\n      console.log('DaysThresh', daysThreshold, dDays, datumArr[cadFieldIndices.cd]);\n      return dDays <= daysThreshold;\n    };\n\n    // Calc total events within time periods; API has data from 365 days in past\n    setCaYear(cadData.data.length);\n    setCaMonth(cadData.data.filter(filterDates(30)).length);\n    setCaWeek(cadData.data.filter(filterDates(7)).length);\n  }, [cadData]);\n\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        <div className={classes.week}>\n          <TitledCell\n            title={`${window.outerWidth < mobileWidthPxl ? '<' : 'LAST'} 7 DAYS`}\n            icon={() => <FontAwesomeIcon icon={faCalendarDay} />}\n            alignment=\"center\"\n            isDisplayed={!!caWeek}\n          >\n            <div className={classes.count}>{caWeek}</div>\n          </TitledCell>\n        </div>\n        <div className={classes.month}>\n          <TitledCell\n            title={`${window.outerWidth < mobileWidthPxl ? '<' : 'LAST'} 30 DAYS`}\n            icon={() => <FontAwesomeIcon icon={faCalendarWeek} />}\n            alignment=\"center\"\n            isDisplayed={!!caMonth}\n          >\n            <div className={classes.count}>{caMonth}</div>\n          </TitledCell>\n        </div>\n        <div className={classes.year}>\n          <TitledCell\n            title={`${window.outerWidth < mobileWidthPxl ? '<' : 'LAST'} 365 DAYS`}\n            icon={() => <FontAwesomeIcon icon={faCalendar} />}\n            alignment=\"center\"\n            isDisplayed={!!caYear}\n          >\n            <div className={classes.count}>{caYear}</div>\n          </TitledCell>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    },\n    root: {\n      width: '100%'\n    },\n    tableContainer: {\n      maxHeight: 240\n    }\n  }),\n  { name: 'table-cad' }\n);\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { useStyles } from './styles';\nimport { ICadData } from '../../Models/data';\nimport { cadFieldIndices, au2ld } from '../../Utils/constants';\nimport { Paper, withStyles, Theme } from '@material-ui/core';\nimport { apiDateStringToJsDate } from '../../Utils/apiDateStringToJsDate';\n\nconst StyledTableCell = withStyles((theme: Theme) => ({\n  head: {\n    // backgroundColor: theme.palette.primary.main,\n    backgroundColor: `#181b2e`,\n    color: theme.palette.common.white\n  },\n  body: {\n    backgroundColor: `rgba(255,255,255,0.05)`,\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst columns = [\n  {\n    id: 'fullname',\n    label: 'Object',\n    minWidth: 130,\n    align: 'left',\n    format: (value: string) => value\n  },\n  {\n    id: 'cd',\n    label: 'Close Approach Date',\n    minWidth: 190,\n    align: 'left',\n    format: (value: string) => value\n  },\n  {\n    id: 'dist',\n    label: 'CA Distance Nominal (LD|AU)',\n    minWidth: 170,\n    align: 'left',\n    format: formatDist\n  },\n  {\n    id: 'dist_min',\n    label: 'CA Distance Mininum (LD|AU)',\n    minWidth: 170,\n    align: 'left',\n    format: formatDist\n  },\n  {\n    id: 'v_rel',\n    label: 'V Relative (km/s)',\n    minWidth: 120,\n    align: 'left',\n    format: (value: string) => parseFloat(value).toFixed(2)\n  },\n  {\n    id: 'v_inf',\n    label: 'V Infinity (km/s)',\n    minWidth: 120,\n    align: 'left',\n    format: (value: string) => parseFloat(value).toFixed(2)\n  },\n  {\n    id: 'h',\n    label: 'H (mag)',\n    minWidth: 100,\n    align: 'left',\n    format: (value: string) => parseFloat(value).toFixed(1)\n  }\n  ///////////////////////////////////////\n  ///////////////////////////////////////\n  ///////////////////////////////////////\n  // {\n  //   id: 'des',\n  //   label: 'Designation',\n  //   minWidth: 170,\n\n  //   format: (value: string) => value\n  // },\n  // {\n  //   id: 'orbit_id',\n  //   label: 'Orbit ID',\n  //   minWidth: 100,\n\n  //   format: (value: string) => value\n  // },\n  // {\n  //   id: 'jd',\n  //   label: 'JD Ephemeris Time',\n  //   minWidth: 170,\n  //   align: 'right',\n  //   format: (value: string) => value\n  // },\n  // {\n  //   id: 'dist_max',\n  //   label: 'Max Approach Distance',\n  //   minWidth: 170,\n  //   align: 'right',\n  //   format: (value: string) => value\n  // },\n  // {\n  //   id: 't_sigma_f',\n  //   label: '3-Sigma Uncertainty',\n  //   minWidth: 170,\n  //   align: 'right',\n  //   format: (value: string) => value\n  // },\n  // {\n  //   id: 'body',\n  //   label: 'Name of Body',\n  //   minWidth: 170,\n  //   align: 'right',\n  //   format: (value: string) => value\n  // }\n];\n\ninterface IProps {\n  cadData: ICadData;\n  period: 'recent' | 'future';\n}\n\nexport const TableCAD = ({ cadData, period }: IProps) => {\n  //\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  // We fetch data at once for both recent and future, which means\n  // we have to separate out items here into their respective tables\n  const displayData = cadData.data.filter((datumArr: string[]) => {\n    // Filter out CA's that aren't in the designated period\n    const dateFromData = apiDateStringToJsDate(datumArr[cadFieldIndices.cd]);\n    const dDays = +new Date() - +dateFromData;\n    return period === 'recent' ? dDays < 0 : dDays >= 0;\n  });\n\n  const rows = displayData.map((datumArr: string[]) => {\n    return {\n      fullname: datumArr[cadFieldIndices.fullname],\n      des: datumArr[cadFieldIndices.des],\n      orbit_id: datumArr[cadFieldIndices.orbit_id],\n      jd: datumArr[cadFieldIndices.jd],\n      cd: datumArr[cadFieldIndices.cd],\n      dist: datumArr[cadFieldIndices.dist],\n      dist_min: datumArr[cadFieldIndices.dist_min],\n      dist_max: datumArr[cadFieldIndices.dist_max],\n      v_rel: datumArr[cadFieldIndices.v_rel],\n      v_inf: datumArr[cadFieldIndices.v_inf],\n      t_sigma_f: datumArr[cadFieldIndices.t_sigma_f],\n      h: datumArr[cadFieldIndices.h]\n    };\n  });\n\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.container}>\n        {/* <Paper className={classes.root}> */}\n        <TableContainer className={classes.tableContainer}>\n          <Table stickyHeader size=\"small\" aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <StyledTableCell\n                    key={column.id}\n                    align={column.align as any}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </StyledTableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.fullname}>\n                    {columns.map((column) => {\n                      const value = (row as any)[column.id];\n                      return (\n                        <StyledTableCell key={column.id} align={(column.align || 'left') as any}>\n                          {column.format(value)}\n                        </StyledTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        {/* </Paper> */}\n      </div>\n    </>\n  );\n};\n\nfunction formatDist(value: string) {\n  const distAU = parseFloat(value);\n  const distLD = distAU * au2ld;\n  const displayValue = `${distLD.toFixed(2)} | ${distAU.toFixed(5)}`;\n  return displayValue;\n}\n","import { MONTHS } from './constants';\n\nexport const formattedTimestamp = (timestamp: string): string => {\n  const d = new Date(timestamp);\n  const date = `${MONTHS[d.getMonth()]}-${d.getDate()}-${d.getFullYear()}`;\n  const time = d.toTimeString().split(' ')[0];\n  return `${time} ${date}`;\n};\n","import { ISentryData, ICadData } from '../Models/data';\n\nexport interface IFetchedData {\n  sentryData: ISentryData;\n  cadData1LD: ICadData;\n  cadData0p05AU: ICadData;\n  timestamp: string;\n}\n\n/**\n * Function to grab all data from NASA API at once\n * At the moment, we're using two routes('sentry' and 'cad'), and calling\n * cad twice with different params\n */\nexport async function fetchAllData(): Promise<IFetchedData> {\n  // Urls for data fetching\n  const sentryUrl = 'https://ssd-api.jpl.nasa.gov/sentry.api';\n  const cad1LDUrl = getCadUrl('1LD');\n  const cad0p05AUUrl = getCadUrl('0p05AU');\n\n  // Fetch data from apis\n  const [sentryData, cadData1LD, cadData0p05AU] = await Promise.all([\n    fetch(sentryUrl).then((res) => res.json()),\n    fetch(cad1LDUrl).then((res) => res.json()),\n    fetch(cad0p05AUUrl).then((res) => res.json())\n  ]);\n\n  // Return fetched data\n  const data: IFetchedData = {\n    sentryData,\n    cadData1LD,\n    cadData0p05AU,\n    timestamp: new Date().toUTCString()\n  };\n  return data;\n}\n\nfunction getCadUrl(dist: '1LD' | '0p05AU') {\n  const baseUrl = 'https://ssd-api.jpl.nasa.gov/cad.api?www=1&nea-comet=Y&fullname=true';\n\n  // Build string for future date\n  const secsInDay = 60 * 60 * 24;\n  const d = new Date();\n  const futureDaysFromNow = 60;\n  const futureDate = new Date(d.setUTCSeconds(d.getUTCSeconds() + futureDaysFromNow * secsInDay));\n  const futureDateStr = futureDate.toISOString().split('T')[0];\n\n  // Assemble final url\n  const res =\n    dist === '1LD'\n      ? `&dist-max=1LD&date-min=-365&date-max=now`\n      : `&dist-max=0.05&date-min=-30&date-max=${futureDateStr}`;\n  return baseUrl + res;\n}\n","import React, { useEffect, useState } from 'react';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMeteor,\n  faShieldAlt,\n  faTable,\n  faGlobeAmericas,\n  faRedo\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { ImageCell } from '../ImageCell';\nimport { useStyles } from './styles';\nimport { Clocks } from '../Clocks';\nimport { Sentry } from '../Sentry';\nimport { ProgramsMap } from '../ProgramsMap';\nimport { NeoCount } from '../NeoCount';\nimport { TitledCell } from '../TitledCell';\nimport { TableCAD } from '../TableCAD';\nimport { useLocalStorage } from '../../Hooks/useLocalStorage';\nimport { formattedTimestamp } from '../../Utils/formattedTime';\nimport { IFetchedData, fetchAllData } from '../../Utils/fetchAllData';\n\nexport const MainUI = () => {\n  const classes = useStyles();\n  const [storedData, setStoredData] = useLocalStorage<null | IFetchedData>('APIDATA', null);\n  const [displayDate, setDisplayDate] = useState('');\n\n  useEffect(() => {\n    // Ensure localStorage has been initialized with the api data\n    if (\n      !storedData ||\n      !storedData.sentryData ||\n      !storedData.cadData0p05AU ||\n      !storedData.cadData1LD\n    ) {\n      fetchAllData().then((data) => setStoredData(data));\n    } else {\n      setDisplayDate(storedData ? formattedTimestamp(storedData.timestamp) : '');\n    }\n  }, [storedData, setStoredData]);\n\n  return (\n    <>\n      <div className={classes.container}>\n        <div className={classes.imageLeft}>\n          <ImageCell imageUrl=\"images/pdco-logo.jpg\" />\n        </div>\n        <div className={classes.imageRight}>\n          <ImageCell imageUrl=\"images/nasa-logo.png\" />\n        </div>\n        <div className={classes.title} onClick={() => setStoredData(null)}>\n          <div className=\"longTitle\">{'PDCO STATUS SUMMARY'}</div>\n          <div className=\"shortTitle\">{'PDCO STATUS'}</div>\n          <div className=\"date\">\n            <span style={{ paddingRight: 3 }}>{displayDate + ' '}</span>\n            <FontAwesomeIcon style={{ fontSize: 10 }} flip=\"horizontal\" icon={faRedo} />\n          </div>\n        </div>\n        <div className={classes.clocks}>\n          <Clocks />\n        </div>\n        <div className={classes.neoCount}>\n          <TitledCell\n            title=\"CLOSE APPROACHES <1LD\"\n            icon={() => <FontAwesomeIcon icon={faMeteor} />}\n            isDisplayed={!!storedData}\n          >\n            {!!storedData && <NeoCount cadData={storedData.cadData1LD} />}\n          </TitledCell>\n        </div>\n        <div className={classes.sentry}>\n          <TitledCell\n            title={() => <a href=\"https://cneos.jpl.nasa.gov/sentry/\">{'SENTRY STATUS'}</a>}\n            icon={() => <FontAwesomeIcon icon={faShieldAlt} />}\n            isDisplayed={!!storedData}\n          >\n            {!!storedData && <Sentry sentryData={storedData.sentryData} />}\n          </TitledCell>\n        </div>\n        <div className={classes.programs}>\n          <TitledCell\n            title=\"PROGRAMS\"\n            icon={() => <FontAwesomeIcon icon={faGlobeAmericas} />}\n            isDisplayed={!!storedData}\n          >\n            <ProgramsMap />\n          </TitledCell>\n        </div>\n        <div className={classes.recentTab}>\n          <TitledCell\n            title=\"RECENT TABLE\"\n            icon={() => <FontAwesomeIcon icon={faTable} />}\n            isDisplayed={!!storedData}\n          >\n            {!!storedData && <TableCAD period=\"recent\" cadData={storedData.cadData0p05AU} />}\n          </TitledCell>\n        </div>\n        <div className={classes.futureTab}>\n          <TitledCell\n            title=\"FUTURE TABLE\"\n            icon={() => <FontAwesomeIcon icon={faTable} />}\n            isDisplayed={!!storedData}\n          >\n            {!!storedData && <TableCAD period=\"future\" cadData={storedData.cadData0p05AU} />}\n          </TitledCell>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\n\nexport function useLocalStorage<T>(key: string, initialValue: any): [T, any] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      width: '100%',\n      height: '100%'\n    }\n  }),\n  { name: 'page-home' }\n);\n","import React from 'react';\n\nimport { MainUI } from '../MainUI';\nimport { useStyles } from './styles';\n\nexport const PageHome = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <MainUI />\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    container: {\n      minHeight: '95vh',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      padding: 10\n    }\n  }),\n  { name: 'page-about' }\n);\n","import React from 'react';\nimport { useStyles } from './styles';\n\nexport const PageAbout = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <h1>PDCO Status Dashboard</h1>\n      <p>\n        This is the dashboard for quickly summarizing the state of concern for the Planetary Defence\n        Coordination Office.\n      </p>\n      <h1>Usage</h1>\n      <p>\n        To preserve API calls, this dashboard caches data at the time displayed in the title bar. It\n        will also refresh automatically every 12 hours. You can manually refresh the data by\n        clicking on the title bar.\n      </p>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    //\n    container: {\n      //\n    }\n  }),\n  { name: 'app-entry' }\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    container: {\n      '& ul': {\n        margin: 0,\n        '& li': {\n          color: 'white',\n          display: 'inline-block',\n          margin: '0px 10px'\n        }\n      }\n    }\n  };\n});\n\n/**\n * This is a simple menu to demo how to work a react router\n */\nexport const SimpleMenu = () => {\n  const classes = useStyles();\n  return (\n    <div className={'simple-menu-container ' + classes['container']}>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(\n  (theme) => {\n    return {\n      container: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.default\n      }\n    };\n  },\n  { name: 'layout' }\n);\n","import React from 'react';\nimport { useStyles } from './styles';\n\nexport const Layout = (props: React.PropsWithChildren<any>) => {\n  const classes = useStyles();\n  return <div className={'layout-container ' + classes.container}>{props.children}</div>;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Style setup\nimport './index.scss';\nimport 'typeface-roboto';\n\n// App Setup\nimport * as serviceWorker from './serviceWorker';\nimport { AppEntry } from './AppEntry';\nReactDOM.render(<AppEntry />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport theme from '../MaterialUI';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\n\nimport { PageHome } from '../Components/PageHome';\nimport { PageAbout } from '../Components/PageAbout';\nimport { useStyles } from './styles';\nimport { SimpleMenu } from '../Components/SimpleMenu';\nimport { Layout } from '../Components/Layout';\n\nexport const AppEntry = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Layout>\n          <Router basename={process.env.REACT_APP_BASE_HREF || '/'}>\n            <Switch>\n              <Route exact path=\"/\">\n                <PageHome />\n              </Route>\n              <Route path=\"/about\">\n                <PageAbout />\n              </Route>\n            </Switch>\n            <SimpleMenu />\n          </Router>\n        </Layout>\n      </ThemeProvider>\n    </div>\n  );\n};\n"],"sourceRoot":""}